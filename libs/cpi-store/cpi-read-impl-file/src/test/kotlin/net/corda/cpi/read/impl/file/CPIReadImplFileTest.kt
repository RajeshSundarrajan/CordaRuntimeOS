/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package net.corda.cpi.read.impl.file

import com.typesafe.config.Config
import com.typesafe.config.ConfigFactory
import net.corda.cpi.read.CPIListener
import net.corda.cpi.read.CPIMetadataListener
import net.corda.packaging.Cpb
import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Disabled
import org.junit.jupiter.api.Test
import java.nio.file.Path
import java.util.concurrent.CountDownLatch

class CPIReadImplFileTest {

    val config: Config = ConfigFactory.parseMap(mapOf("CPIDirectory" to "src/test/resources"))

    @Test
    fun `start and stop CPI read in empty directory sends an empty snapshot`() {
        val cpiListenerImpl = CPIListenerImpl()
        val cpiReadImplFile = CPIReadImplFile(config)
        cpiReadImplFile.start()
        cpiReadImplFile.registerCallback(cpiListenerImpl)
        assertEquals(1, cpiListenerImpl.count)
        cpiReadImplFile.stop()
    }


    // TODO: Copy in built cpb
    @Test
//    @Disabled
    fun `start then insert cpb into directory`() {
        val latchIdentifier = CountDownLatch(2)
        val cpiListenerImpl = CPIListenerImpl(latchIdentifier)
        val cpiReadImplFile = CPIReadImplFile(config)
        cpiReadImplFile.start()
        cpiReadImplFile.registerCallback(cpiListenerImpl)
        latchIdentifier.await()
        assertEquals(2, cpiListenerImpl.count)
        cpiReadImplFile.stop()
    }
}

private class CPIListenerImpl(val latch: CountDownLatch? = null): CPIListener {
    var count = 0
    override fun onUpdate(changedKeys: Set<Cpb.Identifier>, currentSnapshot: Map<Cpb.Identifier, Cpb.MetaData>) {
        count++
        latch?.countDown()
    }
}

