---
apiVersion: apps/v1
# TODO: 1. Is this required to be a stateful set? The only item implying that it could be stateful is the
# instanceId parameter which is used to instance the servers? Is this required at all?
# tl;dr pets vs cattle.
kind: StatefulSet
metadata:
  name: http-rpc-gateway
  labels:
    app: http-rpc-gateway
spec:
  replicas: 1
  template:
    metadata:
      name: http-rpc-gateway
      labels:
        app: http-rpc-gateway
    spec:
      imagePullSecrets:
        - name: "image-pull-secret"
      containers:
        - name: http-rpc-gateway
          image: corda-os-docker-dev.software.r3.com/corda-os-http-rpc-gateway:latest
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: corda
          env:
            - name: MESSAGE_TOPIC_PREFIX
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command: [
            # TODO: 2. Enable SSL for Kafka? Using
            # This is sufficient for now, since transport within the K8s vnet is secure - however
            # this is not the only use case. We might want to connect to kafka is a seperate cluster, or KaaS (ie. external).
              "java", "-jar",
              "-Dbootstrap.servers=$BOOTSTRAP_SERVER",
              "-Dconfig.topic.name=$CONFIG_TOPIC_NAME",
              "-Dmessaging.topic.prefix=$MESSAGE_TOPIC_PREFIX",
              "/opt/override/http-rpc-gateway.jar",
          ]
          # TODO: 3. What is this used for? README.md using integer values ie. 1, 2, 3. Can this just be a random number?
          # ie. using 1,2,3 probably isn't good from a monitoring POV.
          # Imagine stateful set of pet-0, pet-1, pet-2 - each providing the ordinal to the instanceId property.
          # K8s treats pet pods like a stack (ie. LIFO).
          # So upon reduction in demand pet-2 will be culled.
          # Likewise upon increase in demand a new pet-2 will be created.
          # ie. if used in monitoring, this field would cause logs/metrics/etc. to become inconsistent as there would be
          #     mix of logs/metrics/etc. coming from a variety of different instances of a pod.
          args: ["--instanceId=0", ]
      restartPolicy: Always
  selector:
    matchLabels:
      app: http-rpc-gateway
  serviceName: http-rpc-gateway
  updateStrategy:
    type: RollingUpdate
